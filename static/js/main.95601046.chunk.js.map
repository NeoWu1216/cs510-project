{"version":3,"sources":["searchResList.js","Label.js","App.js","serviceWorker.js","index.js"],"names":["searchStyles","makeStyles","theme","root","display","flexDirection","alignItems","searchRes","padding","spacing","width","marginBottom","SearchRes","props","classes","data","title","link","paragraph","Paper","className","Typography","variant","component","Link","href","target","IconButton","aria-label","onClick","onLike","SearchResList","resList","map","x","button","textTransform","Label","text","color","Button","LabelGroup","hidden","ButtonGroup","key","prefix","useStyles","marginRight","menuButton","flexGrow","userButtons","marginLeft","searchBar","height","formControl","labelGroup","flex","justifyContent","drawerPaper","App","topics","React","useState","searchMode","searchText","topic","topicData","searchResState","userLikedPapersTitle","JSON","parse","localStorage","getItem","state","setState","onButtonClick","e","clicked","innerText","useEffect","fetch","method","headers","then","res","json","slice","setItem","stringify","buttons","AppBar","position","Toolbar","FormControl","Select","labelId","id","value","onChange","body","queryString","MenuItem","TextField","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onKeyPress","ev","console","log","a","async","topicString","preventDefault","newlikedpapers","concat","Set","Drawer","drawer","paper","anchor","toolbar","Divider","List","index","ListItem","ListItemIcon","ListItemText","primary","filter","_","onUnLike","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95601046.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nconst searchStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: \"center\",\r\n    \r\n  },\r\n  searchRes: {\r\n    padding: theme.spacing(3, 2),\r\n    width: '65vw',\r\n    marginBottom: \"5vh\",\r\n  },\r\n}))\r\n\r\n\r\nfunction SearchResList(props) {\r\n  const classes = searchStyles();\r\n  const resList = props.data;\r\n  return (<div className={classes.root}>\r\n    {resList.map(x => <SearchRes data={x} onLike={props.onLike}/>)}\r\n  </div>)\r\n}\r\n\r\n\r\n\r\n\r\nfunction SearchRes(props) {\r\n  const classes = searchStyles();\r\n\r\n\r\n  const {data} = props\r\n  const {title, link, paragraph} = data;\r\n\r\n  return (\r\n    <Paper className={classes.searchRes}>\r\n      <Typography variant=\"h6\" component=\"h3\">\r\n        <Link href={link} target=\"_blank\">\r\n          {title}\r\n        </Link>\r\n      </Typography>\r\n      <Typography component=\"p\" variant=\"caption\">\r\n        {link}\r\n      </Typography>\r\n      <Typography component=\"p\">\r\n        {paragraph}\r\n      </Typography>\r\n      <IconButton aria-label=\"like\" onClick={()=>props.onLike(title)}>\r\n            <ThumbUpAltIcon/>\r\n      </IconButton>\r\n\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default SearchResList;\r\n\r\n\r\n","import React from 'react';\r\nimport { Button, ButtonGroup} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst searchStyles = makeStyles(theme => ({\r\n  root: {\r\n    // display: 'flex',\r\n    // flexDirection: 'row',\r\n    // alignItems: \"center\",\r\n  },\r\n\r\n  button: {\r\n    textTransform: 'none',\r\n  }\r\n}))\r\n\r\n\r\nfunction LabelGroup(props) {\r\n  const classes = searchStyles();\r\n  const resList = props.data;\r\n  const {hidden} = props;\r\n  \r\n  if (hidden) {\r\n    return <div></div>;\r\n  }\r\n  return (<ButtonGroup className={classes.root}>\r\n    {resList.map(x => <Label data={x} key={x.text}/>)}\r\n  </ButtonGroup>)\r\n}\r\n\r\n\r\n\r\n\r\nfunction Label(props) {\r\n  const classes = searchStyles();\r\n  const {data} = props\r\n  const {text, onClick, color} = data\r\n\r\n  return (\r\n    <Button onClick={onClick} className={classes.button} color={color} variant={color==='primary' ? 'outlined': 'text'}>\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default LabelGroup;\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Typography, IconButton} from '@material-ui/core'\r\nimport {TextField, MenuItem, FormControl, Select} from '@material-ui/core'\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchResList from './searchResList.js'\r\nimport LabelGroup from './Label.js'\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\n\r\n\r\n\r\nvar prefix = \"cs510-project.herokuapp.com\"\r\nif (process.env.NODE_ENV !== 'production') {\r\n  prefix = \"127.0.0.1:8000\"\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginRight:240,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  userButtons: {\r\n    marginLeft: \"auto\",\r\n    marginRight: -12\r\n  },\r\n  searchBar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"20vh\",\r\n    // alignContent: \"center\"\r\n  },\r\n  formControl: {\r\n    width: \"30vw\",\r\n  },\r\n  labelGroup: {\r\n    flex: 1, \r\n    justifyContent: 'center'\r\n  },\r\n  resList: {\r\n    display: 'flex',\r\n    color : 'red',\r\n    // display: 'flex',\r\n    // height: '60vh',\r\n    // alignItems: 'center',\r\n    // justifyContent: 'center'\r\n  },\r\n    drawerPaper: {\r\n        width: 240,\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n  let topics = ['All', 'Dataset', 'Graphic', 'Video', 'Similarity', 'Object Detection', 'Convolution', 'Points']\r\n\r\n\r\n  function buttonObj(text) {\r\n    return {text:text, onClick:onButtonClick, color:(state.topic===text ? 'primary': 'default')}\r\n  }\r\n\r\n  const [state, setState] = React.useState({\r\n    searchMode : 'Search Titles',\r\n    searchText : '',\r\n    topic: topics[0],\r\n    topicData: {'All':[]},\r\n    searchResState: [{title:'Loading...'}],\r\n    userLikedPapersTitle: JSON.parse(localStorage.getItem('likedPapers')) || [],\r\n  });\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    // Update the document title using the browser API\r\n    fetch(\"http://\"+prefix+\"/query_all\",\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n    ).then(res => res.json()).then(json => {\r\n      return setState(\r\n      {...state, \r\n        topicData: json,\r\n      }\r\n    )})\r\n  }, []);\r\n\r\n  React.useEffect(()=>{\r\n    setState({...state, searchResState: state.topicData['All'].slice(0, 200)})\r\n  },[state.topicData]);\r\n  \r\n    React.useEffect(() => {\r\n        localStorage.setItem('likedPapers', JSON.stringify(state.userLikedPapersTitle));\r\n    }, [state.userLikedPapersTitle]);\r\n  \r\n  function onButtonClick(e) {\r\n    let clicked = e.target.innerText;\r\n    setState({...state, searchResState: state.topicData[clicked], topic: clicked})\r\n  }\r\n\r\n\r\n  function onLike(title) {\r\n      let newlikedpapers = state.userLikedPapersTitle.concat([title]);\r\n      newlikedpapers = [... new Set(newlikedpapers)];\r\n      setState({...state, userLikedPapersTitle: newlikedpapers});\r\n  }\r\n\r\n    function onUnLike(title) {\r\n        let newlikedpapers = state.userLikedPapersTitle.filter(_ => _ !== title);\r\n        setState({...state, userLikedPapersTitle: newlikedpapers});\r\n    }\r\n\r\n\r\n  function onMenuItemChange(e) {\r\n    if (e.target.value === 'Search Titles') {\r\n      setState({...state, searchMode: e.target.value, topic:'All', searchResState: state.topicData['All'].slice(0, 200)})\r\n    } else if (e.target.value === 'Search Paragraphs') {\r\n      setState({...state, searchMode: e.target.value, searchResState: []})\r\n    } if (e.target.value === 'Recommend Papers' ) {\r\n      fetch(\"http://\"+prefix+\"/query_similar\",\r\n          {\r\n              method: 'POST',\r\n              body: JSON.stringify({queryString:state.userLikedPapersTitle}),\r\n              headers: {\r\n                  'Content-Type': 'application/json'\r\n              }\r\n          }\r\n      ).then(res => res.json()).then(json => setState({...state, searchMode: e.target.value, searchResState:json}))\r\n    }\r\n    \r\n    // console.log(e.target.value)\r\n    // setState({...state, })\r\n  }\r\n\r\n  function onChange(e) {\r\n    setState({...state, searchText: e.target.value})\r\n  }\r\n\r\n  async function onSearch() {\r\n      await setState({...state, searchResState:[{paragraph:'Loading...'}]})\r\n      if (state.searchMode === 'Search Paragraphs') {\r\n        await fetch(\"http://\"+prefix+\"/query_title_paragraph\",\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({queryString:state.searchText}),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        ).then(res => res.json()).then(json => setState({...state, searchResState:json}))\r\n      } else if (state.searchMode === 'Search Titles') {\r\n        await fetch(\"http://\"+prefix+\"/query_topic\",\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify({queryString:state.searchText, topicString: state.topic}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        ).then(\r\n          res => res.json()\r\n        ).then(\r\n          json => setState({...state, searchResState:json})\r\n        )\r\n      }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  let buttons = topics.map(buttonObj)\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Computer Vision Paper Search\r\n          </Typography>\r\n          <span className={classes.userButtons}>\r\n            <IconButton color=\"inherit\" aria-label=\"Edit\">\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </span>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.searchBar}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={state.searchMode}\r\n              onChange={onMenuItemChange}\r\n          >\r\n            <MenuItem value={'Search Titles'}>Search Titles</MenuItem>\r\n            <MenuItem value={'Search Paragraphs'}>Search Paragraphs</MenuItem>\r\n            <MenuItem value={'Recommend Papers'}>Recommend Papers</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        { (state.searchMode === 'Recommend Papers') ? null :\r\n        <TextField\r\n            id=\"outlined-full-width\"\r\n            label=\"CV papers to search\"\r\n            style={{ margin: 5 }}\r\n            placeholder=\"\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            onKeyPress={(ev) => {\r\n                console.log(`Pressed keyCode ${ev.key}`);\r\n                if (ev.key === 'Enter') {\r\n                    // Do code here\r\n                    onSearch();\r\n                    ev.preventDefault();\r\n                }\r\n            }}\r\n            onChange={onChange}\r\n        />\r\n        }\r\n      </div>\r\n      <LabelGroup data={buttons} className={classes.labelGroup} hidden={state.searchMode!=='Search Titles'}/>\r\n      <SearchResList data={state.searchResState} className={classes.resList} onLike={onLike}/>\r\n\r\n\r\n\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n            anchor=\"right\"\r\n        >\r\n            <div className={classes.toolbar} />\r\n                Welcome User!\r\n            <Divider />\r\n            <List>\r\n                {['Liked Papers'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n              {state.userLikedPapersTitle.map((text) => (\r\n                  <div>\r\n                      <ListItem button key={text}>\r\n                          <ListItemText primary={text} />\r\n                          <IconButton aria-label=\"unlike\" onClick={()=>onUnLike(text)}>\r\n                              <RemoveCircleOutlineIcon/>\r\n                          </IconButton>\r\n                      </ListItem>\r\n                      <Divider />\r\n                  </div>\r\n              ))}\r\n        </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}