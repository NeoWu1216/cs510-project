<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/c/Users/pc/Desktop/cs510_proj/grobid-0.5.6/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Convexity Shape Constraints for Image Segmentation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Loic</forename><forename type="middle">A</forename><surname>Royer</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">MPI-CBG</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">L</forename><surname>Richmond</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">MPI-CBG</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carsten</forename><surname>Rother</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">TU</orgName>
								<address>
									<settlement>Dresden</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bjoern</forename><surname>Andres</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">MPI for Informatics</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dagmar</forename><surname>Kainmueller</surname></persName>
							<email>kainmueller@mpi-cbg.de</email>
							<affiliation key="aff0">
								<orgName type="institution">MPI-CBG</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Convexity Shape Constraints for Image Segmentation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.5.6" ident="GROBID" when="2019-12-02T16:38+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Segmenting an image into multiple components is a central task in computer vision. In many practical scenarios, prior knowledge about plausible components is available. Incorporating such prior knowledge into models and algorithms for image segmentation is highly desirable, yet can be non-trivial. In this work, we introduce a new approach that allows, for the first time, to constrain some or all components of a segmentation to have convex shapes. Specifically, we extend the Minimum Cost Multicut Problem by a class of constraints that enforce convexity. To solve instances of this NP-hard integer linear program to optimality, we separate the proposed constraints in the branch-and-cut loop of a state-of-the-art ILP solver. Results on photographs and micrographs demonstrate the effectiveness of the approach as well as its advantages over the state-of-the-art heuristic.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Image segmentation is a challenging task for which often times the use of suitable prior knowledge about the shape of the sought objects plays an important role. One interesting shape prior is convexity <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b8">9]</ref>. In natural images, it often occurs that there are multiple convex structures of the same or different classes present in one image, such as bricks in walls, floor tiles, and piles of fruit or wooden logs. Biology similarly gives numerous examples of multiple convex structures in one micrograph. For example, many cell types are convex, such as bacteria, yeast, and more complicated cells densely packed into tissue. Numerous sub-cellular structures, including nuclei and various types of vesicles, are also convex. Despite the clear relevance of this situation to the task of image segmentation, respective priors have, to the best of our knowledge, not yet been addressed in the literature.</p><p>Existing methods for segmenting multiple convex structures are specifically designed for certain shapes like ellip- * Shared first authors soids or rods, as e.g. <ref type="bibr" target="#b6">[7]</ref>. Such methods do not enforce generic convexity, but instead employ priors of specific shapes that happen to be convex. Furthermore, such methods commonly segment multiple structures sequentially, and neither the reconstruction of individual structures nor the resulting segmentation of multiple structures is globally optimal w.r.t. the underlying objective.</p><p>Beyond specific shape priors, there has been recent interest in generic convexity priors for binary image segmentation. Star convexity priors were introduced in <ref type="bibr" target="#b13">[14]</ref>, where convexity is defined with respect to all rays emanating from a central, user-defined seed point. This approach was generalized to the case of Geodesic Star Convexity by <ref type="bibr" target="#b9">[10]</ref>, which defines convexity with regards to Geodesic paths. Truly convex objects were first handled by <ref type="bibr" target="#b12">[13]</ref>. However, this approach is limited to a single foreground class, which must be explicitly modeled. The task of segmenting convex foreground objects without the requirement of user input or explicit modeling is studied in <ref type="bibr" target="#b8">[9]</ref>. They propose a graphical model with triple-cliques that encode convexity constraints as 1-0-1 label sequences along straight lines in the image. This formulation captures the global nature of convexity. However, it implies that only one connected component of the foreground class can be present. Furthermore, the complexity of the problem requires the use of approximate solvers which may lead to local minima. None of the above methods is able to segment many generic convex objects of multiple foreground classes, fully automatically, without user-defined seed points.</p><p>Contributions. In this work we propose the first model and solver for pixel-level segmentation of many generic convex objects of multiple foreground classes. We introduce new models that include convexity constraints into multicut problems, which are ILP formulations of image decomposition problems. We consider two multicut problems, one equivalent to the correlation clustering problem <ref type="bibr" target="#b3">[4]</ref>, another one equivalent to the Potts model. For efficiency, following the idea in <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b0">1]</ref>, we iteratively incorporate into the respective ILPs only the constraints that are violated per instance, and when no more violations occur, we are guaranteed the globally optimal solution. To the best of our knowledge, our models are the first to handle many convex objects and multiple foreground classes. Our models can be solved to global optimality in small yet practical cases. <ref type="figure" target="#fig_0">Figure 1</ref> gives an overview of the multicut problems as well as our proposed convexity constraints, as described in detail in Sections 2 and 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Image Decomposition by Multicuts</head><p>Given the pixel grid graph G = (V, E) of an image, image segmentation tasks are often modeled as the problem of assigning, to each node v ∈ V , one label from a label set L = {1, . . . , k} so as to minimize some objective function. A widely used objective function is the energy of a pairwise conditional random field. A particular instance of this type of objective is the well-known Potts model. Its pairwise terms are non-zero only for edges that connect nodes with different labels. A special case of the Potts model is the Correlation Clustering or Partitioning model <ref type="bibr" target="#b3">[4]</ref>. The respective energy neglects unary terms, and the number of labels equals the number of nodes.</p><p>In the following we describe two Multicut Problems. The first one is equivalent to Correlation Clustering. The second one is equivalent to the Potts model. We also discuss respective solvers as proposed in <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b0">1]</ref>. These Multicut Problems are ILPs that form the basis of our contribution: In Section 3 we take the set theoretic definition of convexity of the connected components of a segmentation, and directly translate it into inequality constraints that we add to the respective ILPs. The Minimum Cost Multicut Problem. The minimum cost multicut problem <ref type="bibr" target="#b5">[6]</ref> is equivalent to the correlation clustering problem. Its feasible solutions are all decompositions of the graph G. A decomposition of G is a partition Π of V such that, for every U ∈ Π, the subgraph of G induced by U is connected. A subgraph of G that is connected and induced by a node set U ⊆ V is called a com-ponent of G. Any decomposition Π of G is characterized by the subset of edges that straddle distinct components:</p><formula xml:id="formula_0">E Π = {vw ∈ E | ∀U ∈ Π : v / ∈ U ∨ w / ∈ U }.</formula><p>Such a subset of edges is called a multicut of G. There is exactly one multicut related to each decomposition of G. The following Theorem forms the basis of multicut problems:</p><formula xml:id="formula_1">Theorem 1 The multicuts of G are precisely the subsets Y ⊆ E for which every cycle C ⊆ E in G satisfies |C ∩ Y | = 1.</formula><p>This has been proven in <ref type="bibr" target="#b5">[6]</ref>. For a sketch, see <ref type="figure" target="#fig_0">Figure 1b</ref>.</p><p>Let y ∈ {0, 1} E be a 01-encoding of a multicut Y . It makes explicit, for any pair uv ∈ E of neighboring nodes, whether u and v are in distinct components, namely iff y uv = 1. 1 These edge labels y e allow for an equivalent formulation of |C ∩ Y | = 1 as linear inequality constraints <ref type="bibr" target="#b1">(2)</ref>, which leads to the following Definition:</p><formula xml:id="formula_2">Definition 1 [6]</formula><p>Given a finite, simple, non-empty graph G = (V, E) and a map c : E → R (that is, for any pair vw ∈ E of neighboring nodes, a cost or reward c vw for v and w being in distinct components), the instance of the Minimum Cost Multicut Problem (MC) with respect to G and c is the ILP</p><formula xml:id="formula_3">min y∈{0,1} E e∈E c e y e<label>(1)</label></formula><p>subject to</p><formula xml:id="formula_4">∀C ∈ cycles(G) ∀e ∈ C : y e ≤ e ′ ∈C\{e} y e ′<label>(2)</label></formula><p>Constraints (2) are referred to as as cycle constraints. It is sufficient to consider only the chordless cycles of G <ref type="bibr" target="#b5">[6]</ref>. For general graphs, the Minimum Cost Multicut Problem is NP-hard <ref type="bibr" target="#b3">[4]</ref> and APX-hard <ref type="bibr" target="#b7">[8]</ref>. For planar graphs, it is NP-hard and constant-factor approximable <ref type="bibr" target="#b2">[3]</ref>. The Minimum Cost Multicut Problem with Node Labels. We also consider a Multicut Problem that is equivalent to the Potts model. This is a more constrained optimization problem in which every node assumes precisely one out of finitely many labels, and neighboring nodes are in the same component iff they have the same label:</p><p>Definition 2 Given a finite, simple, non-empty graph G = (V, E), a map c : E → R, a finite set of labels L = ∅ and a map d : V × L → R (that is, for every node v and any every l, a cost or reward d vl for v being labeled l), the instance of the Minimum Cost Multicut Problem with Node Labels (MCN) with respect to G, L, c and d is the ILP</p><formula xml:id="formula_5">min x∈{0,1} V ×L y∈{0,1} E e∈E c e y e + v∈V l∈L d vl x vl (3) subject to ∀v ∈ V : l∈L x vl = 1 (4) ∀vw ∈ E ∀{l, l ′ } ∈ L 2 : x vl + x wl ′ − 1 ≤ y vw (5) ∀vw ∈ E ∀l ∈ L : y vw ≤ 2 − x vl − x wl<label>(6)</label></formula><p>Here, any feasible solution (x, y) is constrained such that every node v is assigned at least and at most one label, namely the unique l ∈ L such that x vl = 1, by <ref type="bibr" target="#b3">(4)</ref>. It is also constrained such that, for any edge vw ∈ E, y vw = 1 if and only if v and w have distinct labels, by <ref type="formula">(5)</ref> and <ref type="bibr" target="#b5">(6)</ref>. Thus, y is the characteristic function of a multicut of G. It defines uniquely a decomposition of G.</p><p>The MCN (Def. 2) specializes to the MC (Def. 1) for d ≡ 0 and |L| = |V |, as shown e.g. in <ref type="bibr" target="#b10">[11]</ref>. Hence the MCN is NP-hard. Solvers. Branch-and-cut algorithms for the MC (Def. 1) are proposed in <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b0">1]</ref>. They find globally optimal solutions in reasonable run-time in many practical cases by including constraints (2) per instance of the problem only in case they are violated. The MCN (Def. 2) is solved by <ref type="bibr" target="#b10">[11]</ref> by transforming it into an equivalent Minimum Cost Multicut Problem on a modified graph. This transformation involves flipping the meaning of node label variables resulting in the so-called multiway cut problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Method</head><p>This Section provides the methodological contribution of our work. In Section 3.1, we propose a model for image decomposition under the constraint that each component of the resulting partition has to be convex. We achieve this via additional inequality constraints that we include into the Minimum Cost Multicut Problem (Def. 1). Furthermore, we propose a respective model with node labels. With this model, we can enforce for any pair of labels, {k, l} ∈ L 2 , that a component of label k does not contain any node labeled l in its convex hull. This is more general than "simply" enforcing convexity of components. We achieve this via inequality constraints that we include into the Minimum Cost Multicut Problem with Node Labels (Def. 2). In Section 3.2 we propose a solver for the above optimization problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Convexity Constraints for Image Decomposition</head><p>Let P ⊂ E denote an arbitrary open path in G = (V, E). All components of an image decomposition Π are convex iff for any path P that does not contain any edges in E Π , the straight line between the end points of P also does not contain any edges in E Π . In other words, for any path P that lies within a single component, the straight line between its end points also lies within this component. We discretize this set theoretic definition of convexity as follows: In a pixel grid graph with the usual embedding into the 2d plane, where pixels are Voronoi regions of graph nodes (cf. <ref type="figure" target="#fig_0">Fig. 1a</ref>), a component is discrete convex iff for every path P that does not contain any edges in E Π , the interior of the loop formed by P and the straight line between its end points does not enclose any nodes of a distinct component. We call the set of nodes enclosed by this loop the hull of P . See <ref type="figure" target="#fig_2">Figure 2</ref> for a sketch. Let S(P ) denote the path in G that runs along the boundary of the discrete hull of P and connects the first and the last node covered by P (cf. <ref type="figure" target="#fig_2">Fig. 2</ref>). All components of an image partition are discrete convex iff ∀P ∈ paths(G) :</p><formula xml:id="formula_6">e∈P y e = 0 ⇒ e∈S(P ) y e = 0. (7)</formula><p>For a sketch, see <ref type="figure" target="#fig_0">Figure 1c</ref>. Note that in general, the Bresenham line <ref type="bibr" target="#b4">[5]</ref> is different from S(P ), as sketched in <ref type="figure" target="#fig_2">Figure 2</ref>. We propose to formulate (7) as linear inequality constraints, which enables us to formulate the task of finding the optimal decomposition of G into convex components as an ILP: </p><p>and</p><formula xml:id="formula_8">∀P ∈ paths(G) : |S(P )| · e∈P y e ≥ e∈S(P ) y e<label>(9)</label></formula><p>Lemma 1 Constraints (9) are equivalent to <ref type="formula">(7)</ref>.</p><p>A proof of Lemma 1, as well as a discussion of the computational complexity of Convex-MC, is given in the Appendix.</p><p>We also refer to the Convex-MC as correlation clustering  with convexity constraints, to put it into well-known terminology.</p><p>Now we consider image decomposition with node labels, which is equivalent to the Potts model (cf. Section 2). Let V P denote the nodes covered by a path P , and V S(P ) the nodes covered by the respective straight line S(P ) but not by P (i.e., all but the "end points" of S(P )). Given an image decomposition with node labels x, all components assigned to label k are convex iff ∀P :</p><formula xml:id="formula_9">v∈V P x vk = |V P | ⇒ v∈V S(P ) x vk = |V S(P ) |. (10)</formula><p>More generally, components assigned to label k have in their convex hulls only nodes with labels from a subset of</p><formula xml:id="formula_10">L k ⊂ L (where k ∈ L k ) iff ∀P : v∈V P x vk = |V P | ⇒ v∈V S(P ) , l∈L k x vl = |V S(P ) |.<label>(11)</label></formula><p>This holds because (4) entails x vk = 1 ⇒ l∈L k x vl = 1. Constraints (10) are a special case of (11), namely with L k = {k}. We propose to formulate (11) as linear inequality constraints and hence yield an ILP that models image decomposition, with node labels, into convex components: </p><p>and ∀P :</p><formula xml:id="formula_12">|V S(P ) | · |V P | − v∈V P x vk ≥ |V S(P ) | − v∈V S(P ) l∈L k x vl (13)</formula><p>We also refer to this model as Potts model with convexity constraints, to put it into well-known terminology. The proof of equivalence between the convexity constraints <ref type="formula" target="#formula_3">(11)</ref> and <ref type="bibr" target="#b12">(13)</ref> works analogously to the proof of Lemma 1 that we give in the Appendix. The Convex-MCN (Def. 4) is NPhard because it contains the MCN as a sub-problem, in the unconstrained node labels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Optimization</head><p>Similar to <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b0">1]</ref> we pursue a cutting plane approach in which violated cycle-and convexity constraints are separated and added incrementally. Our algorithm starts by solving the MC (Def. 1) or MCN (Def. 2) with the method described in <ref type="bibr" target="#b10">[11]</ref>. Given the resulting image decomposition, we solve the Separation Problem w.r.t. convexity constraints as described below. Solving an ILP with added convexity constraints can entail new violations of cycle constraints. Hence we propose the algorithm defined in <ref type="figure" target="#fig_1">Figure 3</ref>. Upon termination, the algorithm gives the globally optimal feasible solution.</p><p>In practice we can, optionally, allow for ILPs to be solved up to some relative gap of ǫ%. In this case our algorithm gives a feasible solution whose energy is at most ǫ last % away from the global optimum, where ǫ last % is the gap obtained in the last iteration, i.e. directly before termination. More precisely: Consider the sequence of ILPs we solve: ILP 1 , ILP 2 , . . . ILP last . For any k &lt; last, ILP k+1 is more constrained than ILP k . Hence the optimum of ILP k+1 is greater or equal to the optimum of ILP k . In consequence, for arbitrary k, a lower bound to the optimum of ILP k is a lower bound to the optimum of Convex-MC(N). On the other hand, our algorithm terminates with a feasible solution of Convex-MC(N). Hence the energy of this solution is an upper bound to the optimum of Convex-MC(N). Altogether, with the lower bound determined for ILP k denoted as B k , and the energy of the feasible solution found upon termination denoted as E last , the optimum of Convex-MC(N) lies in the interval [max {B k | k = 1, ..., last} , E last ]. Separation of Convexity Constraints. Given an image decomposition, assuming a 2D pixel grid, we detect violated convexity constraints by scanning along sequences of nodes, {v 1 , . . . , v n }, each defined by a start node v 1 = (x, y) and an offset (a, b), with a, b ∈ N co-prime. In case of the Convex-MC (Def. 3), convexity is violated iff two nodes v i , v j along a sequence lie in the same component, and there exists a node v z in the sequence with i &lt; z &lt; j such that v z lies in a different component. In case of the Convex-MCN (Def. 4), there is a violation of (generalized) convexity iff v i , v j lie in the same component, labeled k, and there exists a node v z with i &lt; z &lt; j such that v z is labeled l ∈ L k .</p><p>The cardinality of the set of orientations of sequences, Given a pair of nodes (v i , v j ) that constitutes a violation of convexity, we need to find a respective path P and straight line S(P ). As for a path P from v i to v j through their component: In general there are many such paths. To form a constraint, we pick just one such path. We explore two variants: In case of the Convex-MC (Def. 3), a shortest path in terms of number of edges; In case of the Convex-MCN (Def. 4), a cheapest path in terms of unaries of the label assigned to the component. Dijkstra's algorithm yields an optimal path for either variant.</p><formula xml:id="formula_13">A := {(a, b) co-prime, − N x ≤ a ≤ N x , N y ≤ b ≤ N y },</formula><p>We compute the straight line S(P ) as follows: The path P and the (continuous) straight line v i , v j form a loop. We determine the direction of the normal on this straight line that points to the interior of the respective loop. (Here, without loss of generality, we assume that P and the continuous straight line do not intersect.) Given the normal direction, we greedily find the discrete shortest path with minimal distance of nodes to the continuous straight line, subject to the constraint that no node lies on the wrong side of the line.</p><p>Warm Start Heuristics. Solving an ILP can be made faster by means of "warm-starting" from a known feasible solution. We propose to compute warm start solutions for Convex-MC as follows: For violated cycle constraints (2), we employ a simple warm start heuristic as proposed in <ref type="bibr" target="#b1">[2]</ref>: All edge indicator variables of all violated cycle constraints are set to zero. Given this amended solution, we treat all violated convexity constraints (9) sequentially, as follows: For all paths P of violated convexity constraints, we find the node along the path that causes the smallest increase in energy when cut off from all its neighbors. For this node, we set all respective edge indicator variables to 1. Flipping edge indicator variables may violate other convexity constraints in the ILP that were not violated before the flipping, namely constraints for which all variables were zero, and a variable on S(P ) has been flipped to 1. Therefore we loop through all convexity constraints in the ILP with the above procedure until there is no more violation.</p><p>We propose to compute warm start solutions for Convex-MCN as follows: Concerning convexity constraints <ref type="bibr" target="#b12">(13)</ref>, for all paths P of violated constraints, we find the node along the path that causes the smallest increase in energy when its label is changed. To generate a feasible warm start solution, we amend the respective label indicator variables accordingly. Paths are processed consecutively. We guarantee that "broken" paths P do not become whole again by subsequent changes to other paths: Therefore we put labels into a total order, and allow changes only to labels that are smaller in this order. We choose an order that sorts labels by means of decreasing |L k |. Flipping node labels may still violate other convexity constraints in the ILP that were not violated before, namely constraints for which all nodes on P and S(P ) lie within a connected component. Therefore we loop through all convexity constraints in the ILP with the above procedure until there is no more violation. Subsequently, to obtain a feasible solution also w.r.t. constraints <ref type="bibr" target="#b4">(5)</ref> and <ref type="formula" target="#formula_5">(6)</ref>, we amend the edge indicator variables y vw based on the (amended) label indicator variables x vl : Edge indicator variables are set to zero iff respective neighboring nodes are assigned the same label.</p><p>In addition to warm-start solutions, the run-time of the solver can also be reduced by including constraints "on spec" even if they are not violated. We employ this approach for the Convex-MCN (Def. 4), where we add constraints <ref type="bibr" target="#b4">(5)</ref> and <ref type="bibr" target="#b5">(6)</ref> to the ILP for all nodes that are included into a violated convexity constraint <ref type="bibr" target="#b12">(13)</ref>.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Results and Discussion</head><p>We present proof-of-concept results of our method on exemplary photographs and biological images. We also show the respective results obtained without convexity constraints. We provide a comparison to state of the art <ref type="bibr" target="#b8">[9]</ref> on two exemplary images. We employ a four-connected grid graph in all experiments, check violations of convexity in all discrete directions, and set the stopping criterion for the ILP solver to a relative gap of 2%. Potts Model. <ref type="figure" target="#fig_4">Figure 4</ref> shows examples to which we apply two-label Potts models enriched by convexity constraints on the foreground label by means of the Convex-MCN (Def. 4). <ref type="figure" target="#fig_4">Figure 4(a)</ref> shows a photograph of a pile of wooden beams. Convexity constraints allow for a perfect segmentation of the beams. In contrast, a Potts model without convexity constraints fails to split apart the beams. <ref type="figure" target="#fig_4">Figure 4</ref> convexity constraints allow for a perfect segmentation of the cells, while a respective Potts model without convexity constraints fails to split them apart. <ref type="figure" target="#fig_8">Figure 5</ref>(a) shows a photograph to which we apply a three-label Potts model with convexity constraints on one foreground label. Our method is able to accurately segment two convex foreground objects on top of a second, non-convex foreground label. Results in <ref type="figure" target="#fig_4">Figures 4 and 5</ref>(a) were achieved with "simple" convexity constraints as captured by <ref type="bibr" target="#b9">(10)</ref>. An example for the more general constraints (11) is given in <ref type="figure" target="#fig_8">Figure 5(b)</ref>. Here, we enforce components labeled "apple" to be convex as such, while we enforce components labeled "orange" to be convex only w.r.t. the background. In other words, we allow concavities in orange-labeled components as long as they are filled exclusively by apple-labeled nodes. Consequently such concavities appear, and both objects are segmented as desired. However, note that spurious orange components fringe the apple. Correlation Clustering. <ref type="figure" target="#fig_9">Figure 6</ref> shows two exemplary results for correlation clustering enriched by convexity constraints by means of the Convex-MC (Def. 3). In both examples, densely packed objects, namely bricks in a stone wall and cells in a fly wing, are nicely separated due to convexity constraints. At the same time, the space between these objects is tesselated into convex components. Although these results might not be of direct use as segmentations of the respective objects, they may well serve as convex super-voxels to be used as input for further processing. Run-time and Optimality. <ref type="table">Table 1</ref> lists the energies, numbers of iterations, per-instance gaps, and run-times obtained for our examples. To evaluate the impact of our warm start and constraint heuristics, we also state run-times without warm start, as well as with neither warm start nor constraint heuristics. Note that the ILP stopping criterion of 2 % is not a hard stopping criterion, and hence smaller gaps are achieved per instance.</p><p>Warm start heuristics tremendously improve run-times, making our optimization algorithm up to 16 times faster than without warm start. Constraint heuristics yield smaller but still significant improvements of run-times. Run-times as well as speed-ups highly depend on the particular instance of the problem. As for any NP-hard problem, there is no guarantee that our optimization algorithm will terminate in reasonable time. It appears that our warm start heuristics are particularly effective in cases where objects have to be split apart. This is intuitively explained by the fact that we find feasible warm start solutions by breaking paths of violated constraints, while never replenishing their respective convex hulls. The latter may be a direction for further speed-ups via alternative warm start solutions that "convexify" current solutions. That said, future speed-ups may also be achieved by different means, e.g. by identifying independent subsets of variables of individual ILPs, in the spirit of what has been proposed for Potts models in <ref type="bibr" target="#b11">[12]</ref>.</p><p>Comparison to State-Of-The-Art.</p><p>We compare our method to the state-of-the-art for segmentation with convexity constraints <ref type="bibr" target="#b8">[9]</ref> on two exemplary images. The method of Gorelick et al. <ref type="bibr" target="#b8">[9]</ref> is able to handle one single convex structure of one foreground label, and we chose exemplary images accordingly <ref type="figure" target="#fig_10">(Figure 7)</ref>. We use the code provided by the authors. First we study a synthetic image <ref type="figure" target="#fig_10">(Figure 7 top)</ref>. The method of <ref type="bibr" target="#b8">[9]</ref> initializes via the Graph Cuts solution, yielding a hole in the foreground object. In the process of resolving this high energy configuration, the method breaks the outer boundary of the object and settles to a sub-optimal solution. In contrast, our method is able to obtain the globally optimal solution. On a biological image <ref type="figure" target="#fig_10">(Figure 7</ref> bottom), we ran <ref type="bibr" target="#b8">[9]</ref> with two different initializations, namely the standard Graph Cut solution, as well as a box that we manually placed around the sought structure. Both initializations result in sub-optimal solutions, whereas our method is again able to obtain a globally optimal solution. However, we note that the method of <ref type="bibr" target="#b8">[9]</ref> is considerably faster than ours.</p><p>Use Cases and Limitations. Our method ensures that all connected components of an image partition or the connected components of desired labels in a Potts model are convex. Our method is suitable for application to 2D images that show 2D scenes (like e.g. piles of objects with a convex cross section, floor or wall tilings, satellite images of buildings or agricultural fields), or a slices through 3D scenes (commonly seen in biological applications). The case of occlusions in photographic images of 3D scenes cannot be handled by our method without knowing in advance which object occludes which. This is currently a limitation of our method.</p><p>Furthermore, Convex-MC achieves a convex superpixelization of an image. This may serve as a valuable pre-processing step for applications concerned with the segmentation of composite objects formed by convex parts.  <ref type="table">Table 1</ref>. For each experiment, we list the image resolution in pixels (Res), the energy of the solution obtained without convexity constraints (E), the energy of the solution obtained with convexity constraints (ConvexE), the number of times that convexity constraints are iteratively added to the ILP (# Iter), the gap achieved in the final iteration (Gap), the run-time of the algorithm with convexity constraints (Time), the run-time without the described warm-start heuristics (NoW), and with neither warm start nor additional "on-spec" constraints (NoWC). *Computation omitted due to excessive run times.  <ref type="bibr" target="#b8">[9]</ref>, initialized by (b), and (d) initialized by a square manually placed around the sought structure (top right small image). Both solutions of <ref type="bibr" target="#b8">[9]</ref> are sub-optimal. (e) Our method yields a globally optimal convex solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Conclusion and Future Work</head><p>We proposed a new approach that introduces convexity constraints into two multicut problems that are equivalent to Correlation Clustering and the Potts Model, respectively. Our approach is, to our knowledge, the first that handles convexity constraints for many connected components of multiple different classes, and additionally for pre-specified convexity relationships between objects of different classes. We have presented proof-of-concept results on exemplary photographs and micrographs. All concepts described in this paper extend in a straightforward way to 3D. In future work we will explore strategies for further improving the run-time for the application to larger data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix</head><p>Proof of Lemma 1. Given a path P . In case e∈P y e = 0 it follows from y e ≥ 0 that (9) ⇔ e∈S(P ) y e ≤ 0 ⇔ e∈S(P ) y e = 0 ⇔ (7). Case e∈P y e = 0 entails e∈P y e ≥ 1 because y e ∈ {0, 1}. Hence |S(P )| · e∈P y e ≥ |S(P )|. And, |S(P )| ≥ e∈S(P ) y e because y e ≤ 1. So, true ⇔ (9) ⇔ (7). Computational Complexity of Convex-MC. It is, to our knowledge, an open question whether the Convex-MC (Def. 3) is NP-hard. For initiating a discussion, we offer here a plausibility argument that leads us to speculate that it might be hard: The MC (Def. 1) is "almost" polynomially reducible to Convex-MC: MC and Convex-MC, resp., can be stated equivalently as a node labeling problem, an unconstrained integer QP that is invariant under any permutation of labels. Now, in order to state an instance of the MC as an instance of the Convex-MC, replace each label in the QP formulation of the MC with sufficiently many labels, so as to allow for a decomposition of any non-convex component into convex components in polynomial time. The only reason why this construction is not a reduction of MC to Convex-MC is that the resulting QP, if its solutions are to coincide with those of the MC, cannot be invariant under all permutations of labels.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Method overview. (a) The Multicut Problem (Def. 1) expresses image decomposition as a binary edge labeling problem in a pixel grid graph. Components are inferred from the edge labels via connectivity analysis. (b) Cycle constraints enforce that edges between pixels in the same component cannot be cut. (c) We enrich the Multicut Problem by convexity constraints. Our constraints implement the set theoretic definition of convexity on a discrete grid.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Definition 3</head><label>3</label><figDesc>Given a finite, simple, non-empty graph G = (V, E) and a map c : E → R, the instance of the Minimum Cost Convex Component Multicut Problem (Convex-MC) with respect to G and c is the ILP min y∈{0,1} E e∈Ec e y e subject to<ref type="bibr" target="#b1">(2)</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Discrete convexity in image grid graphs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 .</head><label>3</label><figDesc>Our proposed solver for our Convex Component Multicut Problems (Definitions 3 and 4).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Definition 4</head><label>4</label><figDesc>Given a finite, simple, non-empty graph G = (V, E), a map c : E → R, a finite set of labels L = ∅, a map d : V × L → R, and a set L k ⊂ L for each k ∈ L, with k ∈ L k , the instance of the Minimum Cost Convex Component Multicut Problem with Node Labels (Convex-MCN) with respect to G, L, c, d, and {L k : k ∈ L} is the ILP min x∈{0,1} V ×L y∈{0,1} E e∈E c e y e + v∈V l∈L d vl x vl subject to (4), (5), (6)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>is bounded by O(N 2 ), where N = N x ·N y denotes the number of pixels in a 2d image. Scanning for violations along a particular sequence can be done greedily. For each orientation, the union of the sets of sequences to consider covers the whole image. Hence the computational complexity for processing one particular orientation is in O(N ). Overall, the computational complexity of scanning for violations is bounded by O(N 3 ). Optionally, one may want to consider only a subset of orientations, A ⊂ A. Then the effort reduces to O(|A| · N ).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 4 .</head><label>4</label><figDesc>Examples for convexity constraints in two-label Potts models. Top row: Photograph of a pile of wooden beams (a), and micrograph of densely packed cells in a fly wing (b). Middle row: Two-label Potts model. Bottom row: Convexity constraints on foreground label of the respective Potts model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 .</head><label>5</label><figDesc>(b) shows a biological image of polygonal cells in a fly wing. Again, Examples for convexity constraints in three-label Potts models. (a) Photograph of two fried eggs in a pan. Middle: Threelabel Potts model. Bottom: Convexity constraints on yolk label of the same three-label Potts model. (b) Image of an apple occluding an orange. Middle: Three-label Potts model. Bottom: Generalized convexity constraints, with L apple = {apple} and Lorange = {apple, orange}. Thus the apple label cannot have anything but apple in it's convex hull, while the orange label is allowed to have apple in it's convex hull, but not background.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 .</head><label>6</label><figDesc>Examples for convexity constraints in correlation clustering models: (a) Photograph of a stone wall. (b) Densely packed cells in micrograph of fly wing. (Same image as in Figure 4(b).) Middle: Correlation clustering model. Bottom: Convexity constraints in the respective correlation clustering model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 .</head><label>7</label><figDesc>Comparison of our method to the state-of-the-art method of Gorelick et al. [9] on a synthetic and a biological image. Top row: (a) Synthetic image. (b) Optimal solution of a Potts model. (c,d) Method [9], initialized by (b). (c) First iteration, and (d) sixth iteration (converged), with energy. (e) Our method obtains the globally optimal convex solution. Bottom: (a) Micrograph of the nucleus of a cell. (b) Optimal solution of a Potts model. (c) Solution of</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Note that in<ref type="bibr" target="#b5">[6]</ref> the interpretation of the 01-encoding is flipped, i.e. ye = 0 means that an edge is an element of the multicut.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Probabilistic image segmentation with closedness constraints</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Andres</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kappes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Beier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Köthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hamprecht</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision (ICCV)</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="2611" to="2618" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Globally optimal closed-surface segmentation for connectomics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Andres</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kroeger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Briggman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Denk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Korogod</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Knott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Koethe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">A</forename><surname>Hamprecht</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision-ECCV 2012</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="778" to="791" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Zadimoghaddam. Optimal coalition structure generation in cooperative graph games</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Bachrach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Kohli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kolmogorov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Correlation clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Blum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chawla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Algorithm for computer control of a digital plotter</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Bresenham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Systems journal</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="25" to="30" />
			<date type="published" when="1965" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The partition problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">R</forename><surname>Rao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">1-3</biblScope>
			<biblScope unit="page" from="87" to="115" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Snakes with an ellipse-reproducing property. Image Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Delgado-Gonzalo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Thevenaz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">S</forename><surname>Seelamantula</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Unser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1258" to="1271" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Correlation clustering in general weighted graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">D</forename><surname>Demaine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Emanuel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fiat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Immorlica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">361</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="172" to="187" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Convexity shape prior for segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gorelick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Veksler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Boykov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Nieuwenhuis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision ECCV</title>
		<editor>D. Fleet, T. Pajdla, B. Schiele, and T. Tuytelaars</editor>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2006" />
			<biblScope unit="volume">8693</biblScope>
			<biblScope unit="page" from="675" to="690" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Geodesic star convexity for interactive image segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Gulshan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rother</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Criminisi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zisserman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision and Pattern Recognition (CVPR), 2010 IEEE Conference on</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="3129" to="3136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Globally optimal image partitioning by multicuts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kappes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Speth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Andres</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reinelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Schnörr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Energy Minimization Methods in Computer Vision and Pattern Recognition</title>
		<editor>Y. Boykov, F. Kahl, V. Lempitsky, and F. Schmidt</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">6819</biblScope>
			<biblScope unit="page" from="31" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Towards efficient and exact map-inference for large scale discrete computer vision problems via combinatorial optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Kappes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Speth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reinelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Schnorr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision and Pattern Recognition (CVPR), 2013 IEEE Conference on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1752" to="1758" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Generalized ordering constraints for multilabel optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Strekalovskiy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cremers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Computer Vision (ICCV)</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Star Shape Prior for Graph-Cut Image Segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Veksler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision-ECCV 2008</title>
		<imprint>
			<biblScope unit="page" from="454" to="467" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heidelberg</forename><surname>Springer Berlin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
