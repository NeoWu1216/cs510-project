<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/c/Users/pc/Desktop/cs510_proj/grobid-0.5.6/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Consensus-Based Framework for Distributed Bundle Adjustment</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anders</forename><surname>Eriksson</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Electrical Engineering and Computer Science</orgName>
								<orgName type="institution">Queensland University of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Bastian</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">The University of Adelaide</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tat-Jun</forename><surname>Chin</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">The University of Adelaide</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mats</forename><surname>Isaksson</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Electrical and Computer Engineering Department</orgName>
								<orgName type="institution">Colorado State University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Consensus-Based Framework for Distributed Bundle Adjustment</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>

		<encodingDesc>
			<appInfo>
				<application version="0.5.6" ident="GROBID" when="2019-12-02T16:37+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper we study large-scale optimization problems in multi-view geometry, in particular the Bundle Adjustment problem. In its conventional formulation, the complexity of existing solvers scale poorly with problem size, hence this component of the Structure-from-Motion pipeline can quickly become a bottle-neck. Here we present a novel formulation for solving bundle adjustment in a truly distributed manner using consensus based optimization methods. Our algorithm is presented with a concise derivation based on proximal splitting, along with a theoretical proof of convergence and brief discussions on complexity and implementation. Experiments on a number of real image datasets convincingly demonstrates the potential of the proposed method by outperforming the conventional bundle adjustment formulation by orders of magnitude.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>With the number of images and video available over the internet reaching several billions of terabytes and growing, the need for novel tools capable of handling such vast amount of data becomes apparent. In this paper we present a framework for solving a wide range of large-scale optimization problems in multi-view geometry in a distributed manner.</p><p>Our work focuses on Structure-from-Motion and in particular the Bundle Adjustment problem <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b8">9]</ref>, which is the process of iteratively refining the camera parameters as well as the 3D points of a scene reconstruction through non-linear optimization. Bundle adjustment constitutes a core component in most state-of-the-art multi-view geometry systems, and is typically invoked as a final refinement stage to approximate initial scene estimates as well as a means for removing drift in incremental reconstructions. The Levenberg-Marquardt algorithm has proven to be the most successful method for solving this formulation, as it is simple to implement, robust to initialization, and its framework makes it very amenable to taking advantage of the forms of sparsity that typically arise in multi-view geometry problems. Each step of this algorithm produces an estimate of the parameters that improves upon the previous and the resulting series of iterates can be shown to converge to a local minimum of the objective function at hand.</p><p>Despite its long history within the field of computer vision, bundle adjustment still receives a significant amount of research attention. In its conventional formulation, the complexity of bundle adjustment scales quite poorly with the size of the problem considered; as we transition from small and moderate reconstructions to truly large scale settings, bundle adjustment quickly becomes a computational bottle-neck. Hence, recent efforts in this topic have primarily been focussed towards improving the computational efficiency of bundle adjustment, in particular when applied to very large-scale reconstruction problems, see <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b2">3]</ref>, with a number of publicly available software packages as a result <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b0">1]</ref>. These previous approaches typically boost performance of bundle adjustment by raising the efficiency of specific computational steps taken within the algorithm itself. For example, a number of methods have been introduced in attempts at improving the efficiency of solving the linear systems that rise within the bundle adjustment algorithm. In <ref type="bibr" target="#b5">[6]</ref> the authors advocated the use of conjugate gradients along with a novel preconditioning to replace the Cholesky factorization typically employed. In the paper [2] a method was proposed using a combination of sparse methods, preconditioned conjugate gradient and approximation methods with some very impressive results.</p><p>Other research directions include the work of <ref type="bibr" target="#b17">[18]</ref>. Here the authors attempt to split the problem into a number of smaller subproblems, solve these individually and in parallel and then subsequently merge them into one large final reconstruction. However, because this method relies on decoupling the full scene into sub-maps that are as independent as possible, the degree of parallelism that can be achieved is limited to particular classes of scenes.</p><p>The paper <ref type="bibr" target="#b23">[24]</ref> proposed a very efficient method for solving large scale 3D scene reconstruction problems by capi-talizing on multicore GPUs and CPUs commonly available in today's computers. Some extremely impressive improvements in run-time was reported here. However, this work is more concerned with achieving speed-ups of the conventional bundle adjustment algorithm, exploiting multiple processors on a single computer. Less attention was paid to addressing out-of-core issues and inherent limitations caused by the algorithmic complexity of this conventional formulation.</p><p>This paper focuses on the problem of efficiently solving large-scale bundle adjustment problems in a distributed manner. The proposed method is ultimately intended as an external memory algorithm that fundamentally relies on message passing between resources, and is therefore capable of handling datasets exceeding the memory capacity of a single computer. Furthermore, no assumptions are made in regards to the sparsity or structure of the scene and no limitations on the degree of parallelism are imposed.</p><p>This present work is based on consensus optimization <ref type="bibr" target="#b4">[5]</ref>, a simple but powerful class of methods with the appealing property of being able to operate in a distributed fashion with minimal coordination between nodes. Consensus based algorithms are also extremely straightforward to implement while typically being able to avoid the overhead involved in other approaches, such as aggregating up spanning trees. They belong to a family of optimization algorithms known as proximal splitting methods; this very general class of methods have commonly been used in control and signal processing, applications <ref type="bibr" target="#b7">[8]</ref> but has recently also received attention in the computer vision community <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11]</ref>. To our knowledge this is the first study into their use for distributed Structure-from-Motion recovery in multi-view geometry.</p><p>The paper is organized as follows. In the subsequent section, a brief review of multi-view geometry and the bundle adjustment problem is given, along with an introduction to proximal splitting methods and the Douglas-Rachford method. This is then followed by a section containing the derivation of the proposed algorithm, a theoretical convergence analysis and a discussion on implementational details. Finally, experimental results are given in section 5 followed by concluding remarks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Projective Geometry and Bundle Adjustment</head><p>Multi-view geometry typically concerns the problem of estimating camera and structure parameters that minimize some aspect of the reprojection error of a number of measured image points. Here we restrict ourselves to problems on the following form.</p><p>Let π(P i , X j ) : Q × R 3 → R 2 denote the projection, according to the pinhole camera model, of point X j ∈ R 3 in image i given its camera matrix P i ∈ Q ⊆ R 3×4 and</p><formula xml:id="formula_0">u ij = [ u x ij u y ij ]</formula><p>T the observed image location of the same point. Here the structure of the set Q depends on the setting and camera model used; for full projective reconstruction Q is simply R 3×4 but in the case of calibrated or uncalibrated euclidean reconstructions this set becomes slightly more involved.</p><p>When the error minimized is the total sum-of-squares reprojection error,</p><formula xml:id="formula_1">min Pi,∈Q Xj , i=1,..,m j=1,..,n m i=1 n j=1 w ij (u ij − π(P i , X j )) 2 (1)</formula><p>given n measured image points in m images, we arrive at the well-known Bundle Adjustment problem. Here w ij denotes the elements of the visibility matrix, a binary variable that equals 1 if point j is visible in image i and 0 otherwise. With</p><formula xml:id="formula_2">P = P T 1 . . . P T m T , X = X 1 . . . X n ,</formula><p>Π(P, X) = π(P 1 , X 1 ) π(P 1 , X 2 ) . . . π(P m , X n ) ,</p><formula xml:id="formula_3">U = u 11 u 12 . . . u mn ,</formula><p>we can write (1) compactly, using the Hadamard (or elementwise) product denoted •, as</p><formula xml:id="formula_4">min P ∈Q m X∈R 3×mn ||W • (U − Π(P, X))|| 2 F .<label>(2)</label></formula><p>Bundle adjustment solves (2) using iterative methods for non-linear least squares optimization. The Levenberg-Marquardt algorithm is arguably the most successful method for this formulation. The memory complexity for the conventional formulation of this algorithm is O(m 2 ), quadratic in the number of cameras, and a time complexity of O(m 3 ), cubic in the number of cameras. Hence, the computational costs for this algorithm rapidly becomes prohibitive as the size of the scene grows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Proximal Splitting Methods</head><p>Consider a general convex optimization problem on the following form</p><formula xml:id="formula_5">min x∈H f 1 (x) + ... + f N (x) =Φ(x) ,<label>(3)</label></formula><p>where f i , i = 1, ..., N are proper, convex and lower semicontinuous functions and H a Hilbert space. Proximal splitting methods are a general class of meta-algorithms used for solving <ref type="bibr" target="#b2">(3)</ref>. These methods proceed by splitting the objective functions and evaluating the summands f i individually so as to yield an efficient and easily implementable algorithm.</p><p>The proximity operator prox f : H → H of a proper, convex and lower semi-continuous function f : H → R, with ρ &gt; 0 and H a Hilbert space, is defined as</p><formula xml:id="formula_6">prox f /ρ (y) = arg min x∈H f (x) + ρ 2 ||x − y|| 2<label>(4)</label></formula><p>This notion was first introduced by <ref type="bibr" target="#b16">[17]</ref> as a generalization of the concept of orthogonal projections onto convex sets. The proximity operator plays a central role in the development of the proximal splitting methods. These splitting schemes are first order optimization methods that are particularly aimed at minimizing a sum of functionals for which it is possible to efficiently compute its proximity operator. For any y ∈ H,x is a stationary point of (4) if and only if the inclusion 0 ∈ ∂f (x) + ρ(x − y) holds, or equivalentlȳ</p><formula xml:id="formula_7">x ∈ I + 1 ρ ∂f −1 y,<label>(5)</label></formula><p>with I the identity operator. Returning to our original problem <ref type="formula" target="#formula_5">(3)</ref>, where, for the sake of brevity, we let N = 2, if we further assume that a solution to this problem exists then it follows by Fermat's theorem thatx, a minimizer of (3) must satisfy</p><formula xml:id="formula_8">0 ∈ ∂f 1 (x) + ∂f 2 (x).<label>(6)</label></formula><p>By exploiting its additive structure the above inclusion can then equivalently be recast as a fix-point iteration in a number of different ways, resulting in a variety of different proximal splitting algorithms, most notably the Forward-Backward and Douglas-Rachford splitting schemes <ref type="bibr" target="#b6">[7]</ref>. In this paper we restrict ourselves to the latter, for which the inclusion (6) can be expressed as</p><formula xml:id="formula_9">x + 1 ρ ∂f 2 (x) ∈ I + 1 ρ ∂f 1 −1 (I + ∂f 2 ) (x) + 1 ρ ∂f 2 (x),<label>(7)</label></formula><p>arriving at the fix-point iterations,</p><formula xml:id="formula_10">z t+1 = prox f1/ρ (x t ),<label>(8)</label></formula><formula xml:id="formula_11">x t+1 = x t − z t+1 + prox f2/ρ (2z t+1 − x t )<label>(9)</label></formula><p>In addition to its simplicity these above expressions have the further desirable property of preserving separability. If f 1 or f 2 are separable functions then so are the corresponding proximity operators in (8)- <ref type="bibr" target="#b8">(9)</ref>. It is this attribute that allows for the distributability of the algorithm proposed in the following section. It should also be mentioned that strong connections between proximal splitting methods and a number of already existing classes of algorithms have been established. For instance, the popular Alternating Direction Method of Multipliers <ref type="bibr" target="#b3">[4]</ref> can be shown to be equivalent to a Douglas-Rachford iteration applied to the dual problem. In fact methods such as the Split Bregman and alternating Split Bregman algorithm <ref type="bibr" target="#b12">[13]</ref>, the augmented Lagrangian methods <ref type="bibr" target="#b3">[4]</ref> and Projected Landweber algorithm, to name a few, can all be viewed as special instances of the classical proximal splitting methods; see <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b20">21]</ref> for more details.</p><p>In some cases it is of interest to only realize a Douglas-Rachford splitting scheme on a subset of the variables. This can be shown to benefit both computational and memory requirements of the standard Douglas-Rachford algorithm, for instance if one or both of the entering functions in <ref type="formula" target="#formula_5">(3)</ref> are separable or invariant to some of the entries of x.</p><p>Let H 1 and H 2 be some partition of the Hilbert space H, i.e. H = H 1 × H 2 . Then the partial proximity operator</p><formula xml:id="formula_12">prox † f : H 2 → H, of f : H → R, is defined as prox † f /ρ (y) = arg min [ x1 x2 ]∈H f (x 1 , x 2 ) + ρ 2 ||x 2 − y|| 2 .<label>(10)</label></formula><p>Following as in <ref type="formula" target="#formula_6">(4)</ref>,</p><formula xml:id="formula_13">forx = prox † f /ρ (y) the equivalent inclusion becomes x = ([ 0 I ] + 1 ρ ∂f ) −1 0 y .<label>(11)</label></formula><p>Here we assume that f is strongly convex in x 1 , ensuring the existence of the operator <ref type="formula" target="#formula_9">(7)</ref> can be modified accordingly (omitted here), thus arriving at a partial Douglas-Rachford splitting</p><formula xml:id="formula_14">([ 0 I ] + 1 ρ ∂f ) −1 . The inclusion</formula><formula xml:id="formula_15">z t+1 = prox † f1/ρ (x t 2 ),<label>(12)</label></formula><formula xml:id="formula_16">x t+1 = x t − z t+1 + prox † f2/ρ (2z t+1 2 − x t 2 )<label>(13)</label></formula><p>The convergence properties for this partial formulation can be shown to be similar to that (8)-(9) with only some minor additional assumptions, see <ref type="bibr" target="#b6">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Distributed Bundle Adjustment</head><p>We are now ready to derive our proposed formulation of a distributed bundle adjustment algorithm for solving the Bundle Adjustment problem (1). We will show that reformulating the problem in a very specific way allows us to apply the partial proximal splitting framework of section 3 in a straight forward and distributable manner.</p><p>First we split the m images into l disjoint partitions. Let c k ∈ {1, ..., m}, k = 1, ..., l with k c k = {1, ..., m} and c i ∩ c j = ∅, ∀i = j. Next, introduce ml additional latent variables denotedX k j ∈ R 3 , j = 1, ..., m, k = 1, ..., l. To simplify notation it will prove convenient to also define the following latent visibility matrix</p><formula xml:id="formula_17">w k j = 1, ∃i ∈ c k s.t. w ij = 1, 0, otherwise.<label>(14)</label></formula><p>Using the indicator function (for a set S), here defined as</p><formula xml:id="formula_18">ι S (x) = ∞, x / ∈ S, 0, x ∈ S,<label>(15)</label></formula><p>we can now rewrite (1) as the equivalent problem,</p><formula xml:id="formula_19">min Pi,∈Q X k j , 1≤k≤l 1≤j≤n i∈c k w ij ||u ij − π(P i ,X k j )|| 2 2 + 1≤k1≤l−1 k1+1≤k2≤l 1≤j≤n ι 0 w k1 jw k2 j (X k1 j −X k2 j ) .<label>(16)</label></formula><p>Here 0 denotes the zero vector. Letting</p><formula xml:id="formula_20">f 1 (P,X) = 1≤k≤l 1≤j≤n i∈c k w ij ||u ij − π(P i ,X k j )|| 2 2 ,<label>(17)</label></formula><p>and</p><formula xml:id="formula_21">f 2 (P,X) = 1≤k1≤l−1 k1+1≤k2≤l 1≤j≤n ι 0 w k1 jw k2 j (X k1 j −X k2 j ) .<label>(18)</label></formula><p>we obtain a formulation in line with the proximal splitting of the previous section. Allowing us to apply the partial Douglas-Rachford iterations (12)-(13) to solve <ref type="bibr" target="#b15">(16)</ref>. The partial formulation was employed since, with f 2 being independent of P , the resulting subproblems then becomes particularly simple to solve, as we will show next. First we turn to solving the proximal operators relevant to the partial Douglas-Rachford Splitting <ref type="bibr" target="#b11">(12)</ref>. With f 1 given by <ref type="bibr" target="#b16">(17)</ref> then prox † f1/ρ : R 3×n×l → Q m × R 3×n×l is obtained as the minimizer of,</p><formula xml:id="formula_22">prox † f1/ρ (Z) = arg min P,∈Q m X 1≤k≤l 1≤j≤n i∈c k w ij ||u ij − π(P i ,X k j )|| 2 2 + ρ 2 ||X − Z|| 2 F .<label>(19)</label></formula><p>Since the partitions c k are disjoint we can write <ref type="bibr" target="#b18">(19)</ref> l k=1 min Pi,∈Q |c k | ,</p><formula xml:id="formula_23">X k ∈R 3×n n j=1 i∈c k w ij ||u ij − π(P i ,X k j )|| 2 2 + ρ 2w k j ||X k j − Z k j || 2<label>(20)</label></formula><p>Note that the inner summand of the above problem is completely independent over k and that each of these subproblem is a total sum-of-squares problem to which a standard bundle adjustment solver is directly applicable. Consequently prox † f1/ρ can be evaluated by solving l smaller, independent SfM problem in parallel. This formulation thus allows us to efficiently solve <ref type="bibr" target="#b19">(20)</ref> by distributing this problem across an arbitrary number of processors.</p><p>The second iteration (13) with f 2 as in <ref type="formula" target="#formula_10">(18)</ref> is given by the solution to,</p><formula xml:id="formula_24">prox f2/ρ (Z) = arg min X 1≤k1≤l−1 k1+1≤k2≤l 1≤j≤n ι 0 w k1 jw k2 j (X k1 j −X k2 j ) + ρ 2 ||X − Z|| 2 F (21) = n j=1 min Xj 1≤k1≤l−1 k1+1≤k2≤l ι 0 w k1 jw k2 j (X k1 j −X k2 j ) + ρ 2 l k=1 (X k j − Z k j ) 2 .<label>(22)</label></formula><p>Here we again have a problem that is separable across j and can consequently also be solved in a distributed manner. In addition, here prox † f2/ρ has a particularly convenient closed form solution. Since, for all j, it must hold thatw k1 jw k2 j (X k1 j =X k2 j ), k 1 , k 2 = 1, ..., l,</p><p>at the solution of <ref type="bibr" target="#b21">(22)</ref>. Then this problem can be rewritten equivalently as a equality constrained least-squares problem for which the following close form solution holds</p><formula xml:id="formula_26">prox f2/ρ (Z) k j = l k=1w k j z k j l k=1w k j ,w k j = 1, z k j , otherwise<label>(24)</label></formula><p>The above expression can be obtained through variable substitution in <ref type="bibr" target="#b21">(22)</ref> followed by setting the gradient of the resulting expression to zero. We summarize our proposed method in algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Convergence Analysis</head><p>Directly applying proximal splitting to a non-convex problem does in general not guarantee convergence as the proximity operator is no longer firmly non expansive, a property which the theoretical analysis of this class of algorithms rests heavily on. An exception is the work in <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b21">22]</ref>, which analyses the Forward-backward splitting on non-convex problems. However, very little seems to have been published regarding the convergence of Douglas-Rachford splitting applied to non-convex problems.</p><p>Here we are able to make provable statements regarding the convergence of the proposed framework. It can be shown that with a lower bound on the depth of the reconstructed scene and with ρ sufficiently large then algorithm 1 will converge to a local minima of (1). We have the following main theorem, the proof can be found in the supplementary material.  <ref type="formula" target="#formula_9">(17)</ref>- <ref type="bibr" target="#b17">(18)</ref>, let {(P (t) , X (t) )} ⊂ R 3×4×m × R 3×n denote a sequence generated by Algorithm 1. Assuming that local minimizers of (1) exists, are unique and that the scene depth d is bounded from below by d = P</p><formula xml:id="formula_27">(t) i3 X (t) i 1 ≥ d min &gt; 0, i ∈ [1, m].</formula><p>Then there exists a R ∋ ρ min &gt; 0 such that if ρ (t) &gt; ρ min (with t ≥ T for some fixed T) then Algorithm 1 is guaranteed to converge and every limit point of {(P (t) , X (t) )} is a local minimizer of (1).</p><p>As there is no restriction on the permissible partitions of the cameras we can thus construct subproblems as small as desirable, down to a single camera per process, regardless of scene structure and camera connectivity. If solved in a distributed manner with sufficient nodes, this means that the complexity of this bundle adjustment formulation is now only O(max i (|c i |) 3 ), a significant improvement over O(m 3 ), the complexity of the conventional bundle adjustment formulation. However, this improved complexity does come at a cost. The convergence rates of proximal splitting methods are typically decidedly inferior to those of algorithms such as the Levenberg-Marquardt. In addition, this difference in convergence speed consistently grows with the degree of parallelization. This trade-off between complexity and rate of convergence will be further discussed in section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Implementation Details</head><p>In this section we will briefly discuss some of the practical aspects of implementing algorithm 1. As mentioned in the previous section, the convergence of the proposed method does not necessarily hold in the non-convex setting, unless ρ is sufficiently large, as shown in theorem 4.1. Hence, correctly setting the value of ρ is of importance, a task that is made more demanding owing to the established relationship between the value of this parameter and the rate of convergence of proximal splitting algorithms. Setting ρ too small will not result in a convergent algorithm and setting it too large will render the algorithm intractably slow. A commonly accepted approach is to modify this penalty parameter during the progress of the algorithm and start with a small initial value of ρ to ensure fast convergence in the initial stages and then gradually increase it to certify overall convergence to a stationary point of the problem at hand. This simple scheme was used in this work ρ t+1 = (1+η)ρ t , where typical choices of these parameters were ρ 0 = 10 −3 and η = 0.01.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Distributed Bundle Adjustment</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>input:</head><p>u (image measurements), {ρ (t) } ∞ t=0 , ρ (t) ∈ R + (proximal weighting), {c 1 , ..., c l } (camera partitions) initialize:</p><formula xml:id="formula_28">P (0) , X (0) (initial estimate of cameras &amp; 3D points) X k(0) ← X (0) , k = 1, ..., l (initial latent variables) t = 0 repeat • {P (t+1) ,X (t+1) } ← prox † f1/ρ (t) (Z (t) ) Solve by evaluating, {P (t+1) i∈c k ,X k(t+1) } ← prox † f1/ρ (t) (Z k(t) )</formula><p>, in parallel for all k ∈ [1, l], as in <ref type="bibr" target="#b19">(20)</ref>.</p><formula xml:id="formula_29">• {Z (t+1) } ← Z (t) −X (t+1) + prox f2/ρ (t) (2X (t+1) − Z (t) )</formula><p>Here the proximity operator is separable in j and prox f2/ρ is given in closed form by <ref type="bibr" target="#b23">(24)</ref>.</p><formula xml:id="formula_30">• X (t+1) j ←X k(t+1) j</formula><p>, for any k ∈ [1, l] such that w k j = 1, j = 1, ..., n. • t ← t + 1 until convergence As stated in section 4 algorithm 1 might at the onset give the appearance of having quite substantial memory requirements, since the introduction of the latent variablesX effectively increases the number of variables by a factor of (almost) l. These memory requirements can however be greatly reduced by noting that the individual subproblems <ref type="bibr" target="#b19">(20)</ref> are in fact invariant to any latent 3D point not visible in the current camera partition. That is, for any given k = 1, ..., l, we do not need to store the value ofX k j unless w k j = 1. Consequently, not only does each sub-problem here involve a smaller number of cameras, it only needs to consider the subset of the structure visible from its reduced set of cameras.</p><p>Finally, we point out the fact that since our proposed method is iterative in nature, it is not necessary to solve each bundle adjustment subproblem to machine precision. In fact, in our current implementation we terminate after a single bundle adjustment iteration has resulted in an improved reprojection error.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Experimental Validation</head><p>In this section we present an empirical validation of our proposed algorithm. In our experiment we were mainly interested in investigating the computational gain achieved by the presented formulation over that of conventional formulations. This proposed algorithm is a meta-algorithm, one that does not rely on a specific bundle solver, and we are primarily interested in determining the potential speed-ups gained from the distributed formulation over its conventional counterpart. While it would be interesting to test the speed-up given by our meta-algorithm on more efficient implementation of bundle solvers <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b23">24]</ref>, we leave this as future work. We argue, nonetheless, that the relative gain in computational efficiency would essentially remain unchanged and that this experimental protocol is a legitimate and suitable proxy for highlighting the potential of the proposed method. The initialization of refinement methods such as bundle adjustment is of crucial importance to the results they produce. As the structure-from-motion problem addressed in this work are non-convex, there are multiple local undesirable minimas present. If the starting point is not good enough, the final result will inevitably be poor, but this is just as true for the conventional bundle adjustment as it is for the distributed variant proposed here. However, as we are mainly concerned with computational aspects of (1), we will simply assume that a sufficiently good initialization has been made available to us by some other means. In the below we construct initial estimates by manually adding moderate amounts of Gaussian noise to the reconstructions supplied with each the datasets considered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">Synthetic Experiments</head><p>In order to eliminate outside influences on the computational resources, such as external jobs demanding access to the distributed system, our initial experiments are conducted in a synthetic setting. We emulated a distributed architecture by solving algorithm 1 in serial and subsequently obtaining the timing information as the maximum of the time requirements over all the individual subproblems. This allows us to study the computational requirements separate from the communication overhead under controlled and repeatable conditions.</p><p>We carried out experiments on six different real world datasets, all available from <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b19">20]</ref>. A summary of these datasets are given in table 1.</p><p>A full and calibrated Euclidean reconstructions of each of these image sequences was carried out using our proposed algorithm. We compared our approach to that of a standard bundle adjustment solver. Both algorithms were implemented in Matlab and run on a standard Intel i7, 3GHz machine with 256GB of RAM. The same Matlab implementation of bundle adjustment was employed to solve the conventional formulation as well as the subproblems of algorithm 1. The results of these reconstructions 1 are shown in <ref type="figure" target="#fig_0">figure 1</ref> and table 1. <ref type="bibr" target="#b1">2</ref> These initial results appear very convincing. The left column of graphs in <ref type="figure" target="#fig_0">figure 1</ref> shows how the reprojection error decreases over time (in seconds); for the conventional bundle adjustment algorithm and the distributed formulation, with varying numbers of nodes employed.</p><p>In these plots, the distributed bundle adjustment formulation outperforms the conventional formulation by orders of magnitude. It also appears evident that the more nodes used the faster convergence is achieved. Note that although this outcome might be unsurprising and intuitively correct, it is neither an obvious result nor does it follow trivially from the parallelization of the problem. Recall from section 4.1  that although the algorithmic complexity of algorithm 1 decreases with the number of nodes l, the rate of convergence is inversely proportionate to l. However, these results do seem to suggest that the speed-ups gained from parallelization clearly outweighs the reduced convergence rates.</p><p>However, these results do not take any overhead, such as communication across nodes, into account. The actual amount of overhead is entirely platform dependent. We argue that it is justifiable to assume that this overhead is constant across the iterations. Hence, we can study how different levels of overhead effects the overall performance of algorithm 1. The rightmost column of graphs in <ref type="figure" target="#fig_0">figure 1</ref> shows how the time to convergence varies with the overhead per iteration. From these graphs it is evident that the optimal choice of the number of nodes will constitute a trade-off between the complexity of the subproblems and the amount of overhead inherent to the distributed system used. It should be noted that for conventional bundle adjustment to outperform the distributed algorithm in these experiments, an overhead of about 400%-600% is required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">MPI Experiments</head><p>To verify these above results on an actual distributed platform, we implemented the proposed algorithm 1 using C++, MPI and OpenBLAS, and evaluated its performance on a Beowulf cluster comprising 33 heterogeneous nodes. Each node was connected by Gigabit Ethernet and were typically 2 x 8 core 2.7Ghz machines with 128GB of RAM, although a number of nodes had up to 48 cores and 256GB of RAM. MPI was used to distribute the problem to a varying number of processes run across the cluster. Each subproblem <ref type="bibr" target="#b19">(20)</ref> was solved in parallel, and the minimumX sent to the root node in order to compute the global solution <ref type="bibr" target="#b23">(24)</ref>.</p><p>This implementation was evaluated on the Final sequence of <ref type="bibr" target="#b2">[3]</ref>, a dataset consisting of 961 cameras, 187, 103 3D-points and 1, 692, 975 observations. Here algorithm 1 was distributed across 64 machines, the conventional bun-dle adjustment algorithm was run on a single 32 core machine, see figure 2. As can be seen, these results are in strong agreement with the experiments in the emulated setting of the previous section. It should also be noted that in this experiment and on this system the overhead constituted approximately 0.1% of the entire computational time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusion</head><p>In this paper we have proposed a consensus formulation for distributed bundle adjustment. The resulting metaalgorithm, here derived from proximal splitting methods, is both computationally efficient as well as remarkably straightforward to implement. Our empirical validation clearly demonstrates the potential of our distributed approach, as it appears to be able to offer significant speed-ups of orders of magnitude over the conventional bundle adjustment formulation.</p><p>Future work includes further theoretical as well as empirical analysis and verification of the proposed formulation. We also intend to procure access to the necessary infrastructure required to carry out a comprehensive experimental evaluation on a large number of considerably more demanding datasets across a wide range of architectures.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Theorem 4. 1 (</head><label>1</label><figDesc>Convergence) With f 1 and f 2 as in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Euclidean reconstruction of the datasets of table 1. The left graph shows the Reconstruction Error vs. Time for Conventional Bundle Adjustment as well as the proposed Distributed Bundle Adjustment (for a varying number of nodes). The right graph shows the Time to Convergence vs. Communication Overhead per Iteration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Euclidean reconstruction of the final-961 dataset. (Left) 3D reconstruction. (Center) Reconstruction Error vs. Time. (Right) A Gantt chart of (a portion) of the 64 nodes used. Here each row corresponds to individual nodes, each column to one iteration. The length of each blue bar correlates to the time required to solve the subproblem on that specific node.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Averaged over 100 iterations with different initializations.<ref type="bibr" target="#b1">2</ref> Convergence is achieved once the magnitude of the normalized gradient of (1) is less than 10 −3</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This research was supported by the Australian Research Council through grants DE130101775 and DP160103490.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mierle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ceres Solver: Tutorial &amp; Reference. Google Inc</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Bundle adjustment in the large</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Snavely</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Seitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Szeliski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th European Conference on Computer Vision: Part II, ECCV&apos;10</title>
		<meeting>the 11th European Conference on Computer Vision: Part II, ECCV&apos;10<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="29" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Building rome in a day</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Snavely</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Simon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Seitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Szeliski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Twelfth IEEE International Conference on Computer Vision (ICCV 2009)</title>
		<meeting><address><addrLine>Kyoto, Japan</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009-09" />
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Constrained Optimization and Lagrange Multiplier Methods (Optimization and Neural Computation Series)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Athena Scientific</title>
		<imprint>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
	<note>1 edition</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Parallel and Distributed Computation: Numerical Methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">N</forename><surname>Tsitsiklis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Prentice-Hall, Inc</publisher>
			<pubPlace>Upper Saddle River, NJ, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Conjugate gradient bundle adjustment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Byrod</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Astrom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th European conference on Computer vision: Part II, ECCV&apos;10</title>
		<meeting>the 11th European conference on Computer vision: Part II, ECCV&apos;10<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="114" to="127" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Proximal Splitting Methods in Signal Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Combettes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-C</forename><surname>Pesquet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">; H</forename><surname>Bauschke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Burachik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Combettes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Elser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Wolkowicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">editors, Fixed-Point Algorithms for Inverse Problems in Science and Engineering</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="185" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Gossip algorithms for distributed signal processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Dimakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M F</forename><surname>Moura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">G</forename><surname>Rabbat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Scaglione</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">98</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1847" to="1864" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Bundle adjustment rules</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Engels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Stewénius</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Nistér</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Photogrammetric Computer Vision (PCV). ISPRS</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Pseudoconvex proximal splitting for l-infinity problems in multiview geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Eriksson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Isaksson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision and Pattern Recognition (CVPR), 2014 IEEE Conference on</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="4066" to="4073" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">High breakdown bundle adjustment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Eriksson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Isaksson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-J</forename><surname>Chin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Applications of Computer Vision (WACV), 2015 IEEE Winter Conference on</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="310" to="317" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A generalized proximal point algorithm for certain non-convex minimization problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fukushima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Systems Science</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="989" to="1000" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The split bregman method for l1-regularized problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Imaging Science</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="323" to="343" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Pushing the envelope of modern methods for bundle adjustment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Nistér</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Steedly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Szeliski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I.-S</forename><surname>Kweon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Anal. Mach. Intell</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page">6</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Generalized subgraph preconditioners for large-scale bundle adjustment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-D</forename><surname>Jian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D.-C</forename><surname>Balcan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Dellaert</surname></persName>
		</author>
		<editor>D. N. Metaxas, L. Quan, A. Sanfeliu, and L. J. V. Gool, editors, ICCV</editor>
		<imprint>
			<date type="published" when="2011" />
			<publisher>IEEE</publisher>
			<biblScope unit="page" from="295" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">SBA: A Software Package for Generic Sparse Bundle Adjustment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Lourakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Argyros</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Math. Software</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="30" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Moreau</surname></persName>
		</author>
		<title level="m">Fonctions convexes duales et points proximaux dans un espace hilbertien. Comptes Rendus de l&apos;Académie des Sciences</title>
		<meeting><address><addrLine>Paris</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1962" />
			<biblScope unit="volume">255</biblScope>
			<biblScope unit="page" from="2897" to="2899" />
		</imprint>
	</monogr>
	<note>Série A</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Out-of-core bundle adjustment for large-scale 3d reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Steedly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Dellaert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCV</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Stable structure from motion for unordered image collections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Olsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Enqvist</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scandinavian Conference on Image Analysis</title>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Outlier removal using duality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Olsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Eriksson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hartley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Split bregman algorithm, douglas-rachford splitting and frame shrinkage. Scale space and variational methods in computer vision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Setzer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="464" to="476" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Scalable nonconvex inexact proximal splitting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">; F</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Burges</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bottou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weinberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems</title>
		<imprint>
			<publisher>Curran Associates, Inc</publisher>
			<date type="published" when="2012" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Bundle adjustment ? a modern synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Triggs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mclauchlan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hartley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fitzgibbon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="volume">1883</biblScope>
			<biblScope unit="page" from="298" to="372" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Multicore bundle adjustment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Seitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2011 IEEE Conference on Computer Vision and Pattern Recognition, CVPR &apos;11</title>
		<meeting>the 2011 IEEE Conference on Computer Vision and Pattern Recognition, CVPR &apos;11<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
